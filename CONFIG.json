{
    "logging": {
	"version": 1,
	"disable_existing_loggers": false,
	"formatters": {
	    "standard": {
		"format": "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
	    }
	},
	"handlers": {
            "file_handler": {
		"class": "logging.handlers.RotatingFileHandler",
		"formatter": "standard",
		"filename": "LOG_FILE.log",
		"maxBytes": 1048576,
		"backupCount": 3,
		"level": "INFO"
            },
	    "console": {
		"class": "logging.StreamHandler",
		"formatter": "standard",
		"level": "WARNING",
		"stream": "ext://sys.stdout"
            }
	},
	"root": {
            "handlers": ["file_handler", "console"],
            "level": "INFO"
	}
    },
    "scope": {
	"owon": {
	    "resource_address": "USB0::0x5345::0x1235::2052231::INSTR",
	    "channels": {
		"H": 1,
		"V": 2,
		"+": 3,
		"-": 4
	    },
	    "wave": {
		"amplitude": 0.05,
		"frequency": 100,
		"nduty1": 0.2,
		"nduty2": 0.4,
		"pduty1": 0.2,
		"pduty2": 0.2,
		"voltage_scale": 0.01,
		"comment": "voltage_scale should be equal with initial voltage scale of each channel. here the value is in V unit"
	    },
	    "commands": {
		"autoset": ":AUTOSET",
		"initialise": {
		    "general": [
			":HORIZONTAL:SCALE 1.0ms",
			":HORIZONTAL:OFFSET 0",
			":ACQUIRE:MODE SAMPLE",
			":ACQUIRE:DEPMEM 1K",
			":ACQUIRE:PRECISION 8",
			":TRIGGER:SINGLE:EDGE:SOURCE CH1",
			":TRIGGER:SINGLE:EDGE:COUPLING DC"
		    ],
		    "channel": [
			":CH{}:DISP ON",
			":CH{}:SCALE 10mv",
			":CH{}:OFFSET 0V",
			":CH{}:COUPLING DC"
		    ]
		},
		"measure_params": {
		    "turn_on": ":MEAS:DISP ON",
		    "turn_off": ":MEAS:DISP OFF",
		    "source": ":MEASure:SOURce CH{}",
		    "vbase": ":MEASure:VBASE?",
		    "vmin": ":MEASure:VMIN?"
		},
		"capture": {
		    "begin": ":WAV:BEG CH{}",
		    "wave_range": ":WAVEFORM:RANGE 0,1000",
		    "fetch": ":WAV:FETC?",
		    "end": ":WAV:END"
		}
	    },
	    "queries": {
		"autoset_progress": ":AUTOSET:PROGRESS?",
		"parameters": {
		    "general": {
			"time_scale": ":HORIZONTAL:SCALE?",
			"horizontal_offset": ":HORIZONTAL:OFFSET?",
			"trigger_source": ":TRIGGER:SINGLE:EDGE:SOURCE?",
			"trigger_level": ":TRIGGER:SINGLE:EDGE:LEVEL ?",
			"acquire_mode": ":ACQUIRE:MODE?",
			"memory_depth": ":ACQUIRE:DEPMEM?",
			"memory_precision": ":ACQUIRE:PRECISION?"
		    },
		    "channel": {
			"channel_display": ":CH{}:DISP?",
			"voltage_scale": ":CH{}:SCALE?",
			"vertical_offset": ":CH{}:OFFSET?",
			"channel_coupling": ":CH{}:COUPLING?"
		    }
		}
	    }
	},
	"rigol": {
	    "resource_address": "USB0::0x1AB1::0x04B0::DS6A231100003::INSTR",
	    "channels": {
		"H": 1,
		"V": 2,
		"+": 3,
		"-": 4
	    },
	    "wave": {
		"amplitude": 0.05,
		"frequency": 25,
		"nduty1": 0.05,
		"nduty2": 0.2,
		"pduty1": 0.375,
		"pduty2": 0.375,
		"comment": "I should modify something about duties in rigol class"
	    },
	    "commands": {
		"autoset": ":AUToscale",
		"start_running": ":RUN",
		"stop_running": ":STOP",
		"channel_source": ":WAV:SOUR CHAN{}",
		"initialise": {
		    "general": [
			":TRIG:EDGE:SOUR CHAN1",
			":TRIG:EDGE:LEV 0.0",
			":TRIG:EDGE:SLOP POS",
			"TIMEBASE:HREF:MODE TPOSITION"
		    ],
		    "channel": [
			":CHANNEL{}:DISP ON",
			":CHANNEL{}:SCALE 0.002",
				":CHANNEL{}:OFFSET 0.0",
			":CH{}:COUPLING DC"
		    ]
		}
	    },
	    "queries": {
		"trigger_status": ":TRIG:STAT?",
		"preamble": ":WAV:PRE?",
		"acquire_data": ":WAV:DATA?"
	    }
	}	    
    },
    "optimizer": {
	"qber_threshold": 0.09,
	"pso": {
	    "learning_mode": "cumulative_learning",
	    "min_x": -5000,
	    "max_x": 5001,
	    "max_particles": 20,
	    "max_iteration": 20,
	    "weight": 0.5,
	    "c1": 1,
	    "c2": 2,
	    "qber_best_best": 0.18,
	    "voltage_best_best": [0, 0, 0, 0],
	    "initial_qber_best": 0.5,
	    "dimensions": 4
	},
	"sa": {
	    "dimensions": 4,
	    "bounds": [[-5000, 5000],[-5000, 5000],[-5000, 5000],[-5000, 5000]],
	    "n_iterations": 1000,
	    "step_size": 100,
	    "temp": 10,
	    "initial_threshold": 0.25,
	    "low": -5000,
	    "high": 5001
	},
	"dqn": {
	    "model_type": "DoubleDuelingDQN",
	    "Comment": "implemented types: VanillaDQN, DoubleDQN, DuelingDQN, DoubleDuelingDQN",
	    "total_runs": 300,
	    "input_dims": 5,
	    "n_actions": 81,
	    "memory_size": 1000000,
	    "discrete_actions_space": true,
	    "learning_rate": 0.0009,
	    "fc1_dims": 256,
	    "fc2_dims": 256,
	    "fcvalue_dims": 128,
	    "fcadvantage_dims": 128,
	    "gamma": 0.99,
	    "epsilon": 0.5,
	    "epsilon_dec": 0.997,
	    "epsilon_end": 0.001,
	    "batch_size": 64,
	    "fname": "dddqn_model.h5",
	    "fname2": "dddqn_target_model.h5",
	    "replace_target": 100,
	    "all_actions": {
		"0": "ZZZZ",
		"1": "ZZZU",
		"2": "ZZZD",
		"3": "ZZUZ",
		"4": "ZZDZ",
		"5": "ZUZZ",
		"6": "ZDZZ",
		"7": "UZZZ",
		"8": "DZZZ",
		"9": "ZZUU",
		"10": "ZZDD",
		"11": "ZZUD",
		"12": "ZZDU",
		"13": "ZUZU",
		"14": "ZDZD",
		"15": "ZUZD",
		"16": "ZDZU",
		"17": "UZZU",
		"18": "DZZD",
		"19": "UZZD",
		"20": "DZZU",
		"21": "ZUUZ",
		"22": "ZDDZ",
		"23": "ZUDZ",
		"24": "ZDUZ",
		"25": "UZUZ",
		"26": "DZDZ",
		"27": "UZDZ",
		"28": "DZUZ",
		"29": "UUZZ",
		"30": "DDZZ",
		"31": "UDZZ",
		"32": "DUZZ",
		"33": "ZUUU",
		"34": "ZDDD",
		"35": "ZUUD",
		"36": "ZUDU",
		"37": "ZDUU",
		"38": "ZDDU",
		"39": "ZDUD",
		"40": "ZUDD",
		"41": "UUUZ",
		"42": "DDDZ",
		"43": "UUDZ",
		"44": "UDUZ",
		"45": "DUUZ",
		"46": "DDUZ",
		"47": "DUDZ",
		"48": "UDDZ",
		"49": "UZUU",
		"50": "DZDD",
		"51": "UZUD",
		"52": "UZDU",
		"53": "DZUU",
		"54": "DZDU",
		"55": "DZUD",
		"56": "UZDD",
		"57": "UUZU",
		"58": "DDZD",
		"59": "UUZD",
		"60": "UDZU",
		"61": "DUZU",
		"62": "DDZU",
		"63": "DUZD",
		"64": "UDZD",
		"65": "UUUU",
		"66": "DDDD",
		"67": "UUUD",
		"68": "UUDU",
		"69": "UDUU",
		"70": "DUUU",
		"71": "UUDD",
		"72": "DDUU",
		"73": "UDUD",
		"74": "DUDU",
		"75": "DUUD",
		"76": "UDDU",
		"77": "DDDU",
		"78": "DDUD",
		"79": "DUDD",
		"80": "UDDD"
	    }
	}
    },
    "polarimeter": {
	"thorlabs": {
	    "resource_address": "USB",
	    "mode": "SENS:CALC 5",
	    "motor_on": "INP:ROT:STAT 1",
	    "motor_speed": "INP:ROT:VEL 100",
	    "queries": {
		"wavelength": "SENS:CORR:WAV?",
		"mode": "SENS:CALC?",
		"speed": ":INP:ROT:VEL?",
		"acquire_data": "SENS:DATA:LAT?"
	    }
	}
    },
    "p_controller": {
	"ozoptics": {
	    "port": "COM4",
	    "baudrate": 115200,
	    "timeout": 1,
	    "initial_state": [1000, 1000, 1000, 1000],
	    "step_size": 175,
	    "min_voltage": -5000,
	    "max_voltage": 5000
	}
    }
}
